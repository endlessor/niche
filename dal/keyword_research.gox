package dal

import (
	"encoding/json"

	"github.com/lib/pq"

	keywordresearchsvc "nicheanalysis/gen/keyword_research_svc"
)

// KeywordData is database model for keyword research result
type KeywordData struct {
	AveragePrice       float64
	AverageReviewCount float64
	AverageSales       float64
	DominantCategories pq.StringArray `gorm:"type:text[]"`
	Marketplace        string
	OpportunityScore   float64
	Phrase             string
	VolumeEstimate     float64
	VolumeEstimatedAt  string
	Score              float64
}

// KeywordResearchSave create new keywork reseach scrape result searched
func KeywordResearchSave(res keywordresearchsvc.ViralKeyworddataCollection) error {
	for _, v := range res {
		k := KeywordData{}

		err := db.Where("phrase=?", v.Phrase).Delete(&KeywordData{}).Error
		if err != nil {
			return err
		}

		b, _ := json.Marshal(v)
		err = json.Unmarshal(b, &k)
		if err != nil {
			return err
		}
		err = db.Create(&k).Error
		if err != nil {
			return err
		}
	}
	return nil
}

// KeywordResearchGet get all keyword data from phrase
func KeywordResearchGet(phrase string) (keywordresearchsvc.ViralKeyworddataCollection, error) {
	res := keywordresearchsvc.ViralKeyworddataCollection{}
	kds := []KeywordData{}
	err := db.Where("phrase=?", phrase).Find(&kds).Error
	if err != nil {
		return res, err
	}
	b, _ := json.Marshal(kds)
	err = json.Unmarshal(b, &res)
	return res, err
}
